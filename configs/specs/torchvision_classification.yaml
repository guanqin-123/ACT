# TorchVision Classification Specification Configuration
#
# Optimized preset for creating verification specs from TorchVision
# image classification dataset-model pairs.
#
# Used by: TorchVisionSpecCreator

# Epsilon values optimized for image perturbations
# Common values for L-infinity robustness in image classification
epsilons:
  - 0.01   # Small perturbation (barely perceptible)
  - 0.03   # Medium perturbation (standard in adversarial robustness)
  - 0.05   # Large perturbation (visible but reasonable)
  - 0.1    # Very large perturbation (significant modification)

# Margin values for classification robustness
# margin=0.0 means strict classification (y_true must be top-1)
# margin>0.0 means relaxed classification (y_true + margin > others)
margins:
  - 0.0
  - 0.5

# Input specification types
# BOX: Explicit lower/upper bounds [lb, ub] per pixel
# LINF_BALL: L-infinity ball with center and epsilon
input_kinds:
  - BOX
  - LINF_BALL

# Output specification types
# MARGIN_ROBUST: y[y_true] - max(y[others]) >= margin
# TOP1_ROBUST: argmax(y) == y_true (equivalent to MARGIN_ROBUST with margin=0)
output_kinds:
  - MARGIN_ROBUST
  - TOP1_ROBUST

# Combination strategy
# For TorchVision, use 'full' to explore multiple epsilon-margin combinations
combination_strategy: full

# Balanced strategy parameters (not used with 'full' strategy)
balanced_params:
  max_input_specs: 5
  max_output_specs: 3
  max_total_combinations: 15

# Validation settings
validation:
  # Always validate for image classification
  validate_shapes: true
  
  # Skip invalid specs rather than failing
  skip_invalid: true

# TorchVision-specific settings
torchvision:
  # Number of samples per dataset-model pair
  # Higher for comprehensive testing, lower for quick exploration
  num_samples: 20
  
  # Starting index in dataset (useful for skipping early samples)
  start_index: 0
  
  # Use test split for evaluation
  split: "test"
  
  # Preprocessing settings (handled automatically by data_model_loader)
  # These are informational only
  preprocessing_info:
    normalize: true  # Images normalized to [0, 1]
    resize: true     # Resized to model input size
    grayscale: false # RGB by default (MNIST uses grayscale)

# Image classification specific
image_classification:
  # Clamp perturbations to valid pixel range
  clamp_range:
    min: 0.0
    max: 1.0
  
  # Whether to center perturbations around sample
  center_perturbations: true

# Logging configuration
logging:
  level: "INFO"
  show_progress: true
  
  # Show per-sample spec generation details
  verbose_samples: false

# Performance settings
performance:
  # Batch processing for validation (if applicable)
  batch_validate: false
  
  # Cache model I/O shapes to avoid repeated inference
  cache_shapes: true

# Notes for users
notes: |
  TorchVision Classification Preset:
  - Designed for MNIST, CIFAR10, ImageNet models
  - Uses standard epsilon values (0.01, 0.03, 0.05, 0.1)
  - Generates both BOX and LINF_BALL input specs
  - Tests both strict (TOP1_ROBUST) and margin-based robustness
  - Full combination strategy creates many spec pairs for thorough testing
