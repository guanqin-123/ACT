ACT Verification Debug Log
================================================================================


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Output bounds: shape=torch.Size([64]), lb_range=[-4.7908, 2.6953], ub_range=[-3.5705, 3.9459]
Parameters: W.shape=torch.Size([64, 784]), b.shape=torch.Size([64])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([64]), lb_range=[-4.7908, 2.6953], ub_range=[-3.5705, 3.9459]
Output bounds: shape=torch.Size([64]), lb_range=[0.0000, 2.6953], ub_range=[0.0000, 3.9459]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([64]), lb_range=[0.0000, 2.6953], ub_range=[0.0000, 3.9459]
Output bounds: shape=torch.Size([10]), lb_range=[-3.7920, -1.1006], ub_range=[0.0845, 2.7904]
Parameters: W.shape=torch.Size([10, 64]), b.shape=torch.Size([10])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([10]), lb_range=[-3.7920, -1.1006], ub_range=[0.0845, 2.7904]
Output bounds: shape=torch.Size([10]), lb_range=[-3.7920, -1.1006], ub_range=[0.0845, 2.7904]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4900, 0.4900], ub_range=[0.5100, 0.5100]
Output bounds: shape=torch.Size([64]), lb_range=[-4.7908, 2.6953], ub_range=[-3.5705, 3.9459]
Parameters: W.shape=torch.Size([64, 784]), b.shape=torch.Size([64])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([64]), lb_range=[-4.7908, 2.6953], ub_range=[-3.5705, 3.9459]
Output bounds: shape=torch.Size([64]), lb_range=[0.0000, 2.6953], ub_range=[0.0000, 3.9459]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([64]), lb_range=[0.0000, 2.6953], ub_range=[0.0000, 3.9459]
Output bounds: shape=torch.Size([10]), lb_range=[-3.7920, -1.1006], ub_range=[0.0845, 2.7904]
Parameters: W.shape=torch.Size([10, 64]), b.shape=torch.Size([10])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([10]), lb_range=[-3.7920, -1.1006], ub_range=[0.0845, 2.7904]
Output bounds: shape=torch.Size([10]), lb_range=[-3.7920, -1.1006], ub_range=[0.0845, 2.7904]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Output bounds: shape=torch.Size([32]), lb_range=[-5.5806, 0.2104], ub_range=[0.6099, 6.4096]
Parameters: W.shape=torch.Size([32, 784]), b.shape=torch.Size([32])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([32]), lb_range=[-5.5806, 0.2104], ub_range=[0.6099, 6.4096]
Output bounds: shape=torch.Size([32]), lb_range=[0.0000, 0.2104], ub_range=[0.6099, 6.4096]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([32]), lb_range=[0.0000, 0.2104], ub_range=[0.6099, 6.4096]
Output bounds: shape=torch.Size([10]), lb_range=[-6.5682, -3.2623], ub_range=[2.0715, 6.8481]
Parameters: W.shape=torch.Size([10, 32]), b.shape=torch.Size([10])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([10]), lb_range=[-6.5682, -3.2623], ub_range=[2.0715, 6.8481]
Output bounds: shape=torch.Size([10]), lb_range=[-6.5682, -3.2623], ub_range=[2.0715, 6.8481]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.4500, 0.4500], ub_range=[0.5500, 0.5500]
Output bounds: shape=torch.Size([32]), lb_range=[-5.5806, 0.2104], ub_range=[0.6099, 6.4096]
Parameters: W.shape=torch.Size([32, 784]), b.shape=torch.Size([32])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([32]), lb_range=[-5.5806, 0.2104], ub_range=[0.6099, 6.4096]
Output bounds: shape=torch.Size([32]), lb_range=[0.0000, 0.2104], ub_range=[0.6099, 6.4096]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([32]), lb_range=[0.0000, 0.2104], ub_range=[0.6099, 6.4096]
Output bounds: shape=torch.Size([10]), lb_range=[-6.5682, -3.2623], ub_range=[2.0715, 6.8481]
Parameters: W.shape=torch.Size([10, 32]), b.shape=torch.Size([10])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([10]), lb_range=[-6.5682, -3.2623], ub_range=[2.0715, 6.8481]
Output bounds: shape=torch.Size([10]), lb_range=[-6.5682, -3.2623], ub_range=[2.0715, 6.8481]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Output bounds: shape=torch.Size([16]), lb_range=[-11.3676, -6.8537], ub_range=[6.8555, 11.7666]
Parameters: W.shape=torch.Size([16, 784]), b.shape=torch.Size([16])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([16]), lb_range=[-11.3676, -6.8537], ub_range=[6.8555, 11.7666]
Output bounds: shape=torch.Size([16]), lb_range=[0.0000, 0.0000], ub_range=[6.8555, 11.7666]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([16]), lb_range=[0.0000, 0.0000], ub_range=[6.8555, 11.7666]
Output bounds: shape=torch.Size([10]), lb_range=[-7.5204, -2.2889], ub_range=[3.7518, 6.8300]
Parameters: W.shape=torch.Size([10, 16]), b.shape=torch.Size([10])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([10]), lb_range=[-7.5204, -2.2889], ub_range=[3.7518, 6.8300]
Output bounds: shape=torch.Size([10]), lb_range=[-7.5204, -2.2889], ub_range=[3.7518, 6.8300]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Output bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 784]), lb_range=[0.3500, 0.3500], ub_range=[0.6500, 0.6500]
Output bounds: shape=torch.Size([16]), lb_range=[-11.3676, -6.8537], ub_range=[6.8555, 11.7666]
Parameters: W.shape=torch.Size([16, 784]), b.shape=torch.Size([16])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([16]), lb_range=[-11.3676, -6.8537], ub_range=[6.8555, 11.7666]
Output bounds: shape=torch.Size([16]), lb_range=[0.0000, 0.0000], ub_range=[6.8555, 11.7666]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([16]), lb_range=[0.0000, 0.0000], ub_range=[6.8555, 11.7666]
Output bounds: shape=torch.Size([10]), lb_range=[-7.5204, -2.2889], ub_range=[3.7518, 6.8300]
Parameters: W.shape=torch.Size([10, 16]), b.shape=torch.Size([10])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([10]), lb_range=[-7.5204, -2.2889], ub_range=[3.7518, 6.8300]
Output bounds: shape=torch.Size([10]), lb_range=[-7.5204, -2.2889], ub_range=[3.7518, 6.8300]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (CONV2D)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([16384]), lb_range=[-1.4669, -0.0192], ub_range=[0.1204, 1.7547]
Parameters: weight.shape=torch.Size([16, 3, 3, 3])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([16384]), lb_range=[-1.4669, -0.0192], ub_range=[0.1204, 1.7547]
Output bounds: shape=torch.Size([16384]), lb_range=[0.0000, 0.0000], ub_range=[0.1204, 1.7547]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (CONV2D)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([16384]), lb_range=[-1.4669, -0.0192], ub_range=[0.1204, 1.7547]
Parameters: weight.shape=torch.Size([16, 3, 3, 3])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([16384]), lb_range=[-1.4669, -0.0192], ub_range=[0.1204, 1.7547]
Output bounds: shape=torch.Size([16384]), lb_range=[0.0000, 0.0000], ub_range=[0.1204, 1.7547]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (CONV2D)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([8192]), lb_range=[-1.4502, -0.2268], ub_range=[0.0521, 1.5109]
Parameters: weight.shape=torch.Size([8, 3, 3, 3])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([8192]), lb_range=[-1.4502, -0.2268], ub_range=[0.0521, 1.5109]
Output bounds: shape=torch.Size([8192]), lb_range=[0.0000, 0.0000], ub_range=[0.0521, 1.5109]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (CONV2D)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([8192]), lb_range=[-1.4502, -0.2268], ub_range=[0.0521, 1.5109]
Parameters: weight.shape=torch.Size([8, 3, 3, 3])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([8192]), lb_range=[-1.4502, -0.2268], ub_range=[0.0521, 1.5109]
Output bounds: shape=torch.Size([8192]), lb_range=[0.0000, 0.0000], ub_range=[0.0521, 1.5109]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (CONV2D)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([4096]), lb_range=[-1.3611, -0.2398], ub_range=[0.2516, 1.8278]
Parameters: weight.shape=torch.Size([4, 3, 3, 3])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([4096]), lb_range=[-1.3611, -0.2398], ub_range=[0.2516, 1.8278]
Output bounds: shape=torch.Size([4096]), lb_range=[0.0000, 0.0000], ub_range=[0.2516, 1.8278]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (CONV2D)
================================================================================
Input bounds: shape=torch.Size([1, 3, 32, 32]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([4096]), lb_range=[-1.3611, -0.2398], ub_range=[0.2516, 1.8278]
Parameters: weight.shape=torch.Size([4, 3, 3, 3])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([4096]), lb_range=[-1.3611, -0.2398], ub_range=[0.2516, 1.8278]
Output bounds: shape=torch.Size([4096]), lb_range=[0.0000, 0.0000], ub_range=[0.2516, 1.8278]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([16]), lb_range=[-0.8795, -0.3714], ub_range=[0.3714, 0.8795]
Parameters: W.shape=torch.Size([16, 8]), b.shape=torch.Size([16])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([16]), lb_range=[-0.8795, -0.3714], ub_range=[0.3714, 0.8795]
Output bounds: shape=torch.Size([16]), lb_range=[0.0000, 0.0000], ub_range=[0.3714, 0.8795]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([16]), lb_range=[0.0000, 0.0000], ub_range=[0.3714, 0.8795]
Output bounds: shape=torch.Size([4]), lb_range=[-0.4764, -0.3031], ub_range=[0.3102, 0.4000]
Parameters: W.shape=torch.Size([4, 16]), b.shape=torch.Size([4])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([4]), lb_range=[-0.4764, -0.3031], ub_range=[0.3102, 0.4000]
Output bounds: shape=torch.Size([4]), lb_range=[-0.4764, -0.3031], ub_range=[0.3102, 0.4000]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([16]), lb_range=[-0.8795, -0.3714], ub_range=[0.3714, 0.8795]
Parameters: W.shape=torch.Size([16, 8]), b.shape=torch.Size([16])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([16]), lb_range=[-0.8795, -0.3714], ub_range=[0.3714, 0.8795]
Output bounds: shape=torch.Size([16]), lb_range=[0.0000, 0.0000], ub_range=[0.3714, 0.8795]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([16]), lb_range=[0.0000, 0.0000], ub_range=[0.3714, 0.8795]
Output bounds: shape=torch.Size([4]), lb_range=[-0.4764, -0.3031], ub_range=[0.3102, 0.4000]
Parameters: W.shape=torch.Size([4, 16]), b.shape=torch.Size([4])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([4]), lb_range=[-0.4764, -0.3031], ub_range=[0.3102, 0.4000]
Output bounds: shape=torch.Size([4]), lb_range=[-0.4764, -0.3031], ub_range=[0.3102, 0.4000]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([12]), lb_range=[-0.9039, -0.4220], ub_range=[0.4220, 0.9039]
Parameters: W.shape=torch.Size([12, 8]), b.shape=torch.Size([12])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (TANH)
================================================================================
Input bounds: shape=torch.Size([12]), lb_range=[-0.9039, -0.4220], ub_range=[0.4220, 0.9039]
Output bounds: shape=torch.Size([12]), lb_range=[-0.7182, -0.3986], ub_range=[0.3986, 0.7182]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([12]), lb_range=[-0.7182, -0.3986], ub_range=[0.3986, 0.7182]
Output bounds: shape=torch.Size([4]), lb_range=[-0.5534, -0.3813], ub_range=[0.3813, 0.5534]
Parameters: W.shape=torch.Size([4, 12]), b.shape=torch.Size([4])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([4]), lb_range=[-0.5534, -0.3813], ub_range=[0.3813, 0.5534]
Output bounds: shape=torch.Size([4]), lb_range=[-0.5534, -0.3813], ub_range=[0.3813, 0.5534]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([12]), lb_range=[-0.9039, -0.4220], ub_range=[0.4220, 0.9039]
Parameters: W.shape=torch.Size([12, 8]), b.shape=torch.Size([12])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (TANH)
================================================================================
Input bounds: shape=torch.Size([12]), lb_range=[-0.9039, -0.4220], ub_range=[0.4220, 0.9039]
Output bounds: shape=torch.Size([12]), lb_range=[-0.7182, -0.3986], ub_range=[0.3986, 0.7182]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([12]), lb_range=[-0.7182, -0.3986], ub_range=[0.3986, 0.7182]
Output bounds: shape=torch.Size([4]), lb_range=[-0.5534, -0.3813], ub_range=[0.3813, 0.5534]
Parameters: W.shape=torch.Size([4, 12]), b.shape=torch.Size([4])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([4]), lb_range=[-0.5534, -0.3813], ub_range=[0.3813, 0.5534]
Output bounds: shape=torch.Size([4]), lb_range=[-0.5534, -0.3813], ub_range=[0.3813, 0.5534]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([8]), lb_range=[-0.8993, -0.3707], ub_range=[0.3707, 0.8993]
Parameters: W.shape=torch.Size([8, 8]), b.shape=torch.Size([8])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (TANH)
================================================================================
Input bounds: shape=torch.Size([8]), lb_range=[-0.8993, -0.3707], ub_range=[0.3707, 0.8993]
Output bounds: shape=torch.Size([8]), lb_range=[-0.7160, -0.3546], ub_range=[0.3546, 0.7160]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([8]), lb_range=[-0.7160, -0.3546], ub_range=[0.3546, 0.7160]
Output bounds: shape=torch.Size([4]), lb_range=[-0.3444, -0.2518], ub_range=[0.2518, 0.3444]
Parameters: W.shape=torch.Size([4, 8]), b.shape=torch.Size([4])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([4]), lb_range=[-0.3444, -0.2518], ub_range=[0.2518, 0.3444]
Output bounds: shape=torch.Size([4]), lb_range=[-0.3444, -0.2518], ub_range=[0.2518, 0.3444]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 8]), lb_range=[-1.0000, -1.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([8]), lb_range=[-0.8993, -0.3707], ub_range=[0.3707, 0.8993]
Parameters: W.shape=torch.Size([8, 8]), b.shape=torch.Size([8])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (TANH)
================================================================================
Input bounds: shape=torch.Size([8]), lb_range=[-0.8993, -0.3707], ub_range=[0.3707, 0.8993]
Output bounds: shape=torch.Size([8]), lb_range=[-0.7160, -0.3546], ub_range=[0.3546, 0.7160]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([8]), lb_range=[-0.7160, -0.3546], ub_range=[0.3546, 0.7160]
Output bounds: shape=torch.Size([4]), lb_range=[-0.3444, -0.2518], ub_range=[0.2518, 0.3444]
Parameters: W.shape=torch.Size([4, 8]), b.shape=torch.Size([4])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([4]), lb_range=[-0.3444, -0.2518], ub_range=[0.2518, 0.3444]
Output bounds: shape=torch.Size([4]), lb_range=[-0.3444, -0.2518], ub_range=[0.2518, 0.3444]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([12]), lb_range=[-0.6636, -0.0034], ub_range=[0.0420, 0.3525]
Parameters: W.shape=torch.Size([12, 6]), b.shape=torch.Size([12])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([12]), lb_range=[-0.6636, -0.0034], ub_range=[0.0420, 0.3525]
Output bounds: shape=torch.Size([12]), lb_range=[0.0000, 0.0000], ub_range=[0.0420, 0.3525]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([12]), lb_range=[0.0000, 0.0000], ub_range=[0.0420, 0.3525]
Output bounds: shape=torch.Size([3]), lb_range=[-0.0986, -0.0865], ub_range=[0.0961, 0.1767]
Parameters: W.shape=torch.Size([3, 12]), b.shape=torch.Size([3])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([3]), lb_range=[-0.0986, -0.0865], ub_range=[0.0961, 0.1767]
Output bounds: shape=torch.Size([3]), lb_range=[-0.0986, -0.0865], ub_range=[0.0961, 0.1767]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([12]), lb_range=[-0.6636, -0.0034], ub_range=[0.0420, 0.3525]
Parameters: W.shape=torch.Size([12, 6]), b.shape=torch.Size([12])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (RELU)
================================================================================
Input bounds: shape=torch.Size([12]), lb_range=[-0.6636, -0.0034], ub_range=[0.0420, 0.3525]
Output bounds: shape=torch.Size([12]), lb_range=[0.0000, 0.0000], ub_range=[0.0420, 0.3525]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([12]), lb_range=[0.0000, 0.0000], ub_range=[0.0420, 0.3525]
Output bounds: shape=torch.Size([3]), lb_range=[-0.0986, -0.0865], ub_range=[0.0961, 0.1767]
Parameters: W.shape=torch.Size([3, 12]), b.shape=torch.Size([3])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([3]), lb_range=[-0.0986, -0.0865], ub_range=[0.0961, 0.1767]
Output bounds: shape=torch.Size([3]), lb_range=[-0.0986, -0.0865], ub_range=[0.0961, 0.1767]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([8]), lb_range=[-0.4511, -0.0347], ub_range=[0.0382, 0.2379]
Parameters: W.shape=torch.Size([8, 6]), b.shape=torch.Size([8])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (TANH)
================================================================================
Input bounds: shape=torch.Size([8]), lb_range=[-0.4511, -0.0347], ub_range=[0.0382, 0.2379]
Output bounds: shape=torch.Size([8]), lb_range=[-0.4228, -0.0347], ub_range=[0.0382, 0.2335]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([8]), lb_range=[-0.4228, -0.0347], ub_range=[0.0382, 0.2335]
Output bounds: shape=torch.Size([3]), lb_range=[-0.3273, -0.1113], ub_range=[0.0967, 0.1665]
Parameters: W.shape=torch.Size([3, 8]), b.shape=torch.Size([3])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([3]), lb_range=[-0.3273, -0.1113], ub_range=[0.0967, 0.1665]
Output bounds: shape=torch.Size([3]), lb_range=[-0.3273, -0.1113], ub_range=[0.0967, 0.1665]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([8]), lb_range=[-0.4511, -0.0347], ub_range=[0.0382, 0.2379]
Parameters: W.shape=torch.Size([8, 6]), b.shape=torch.Size([8])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (TANH)
================================================================================
Input bounds: shape=torch.Size([8]), lb_range=[-0.4511, -0.0347], ub_range=[0.0382, 0.2379]
Output bounds: shape=torch.Size([8]), lb_range=[-0.4228, -0.0347], ub_range=[0.0382, 0.2335]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([8]), lb_range=[-0.4228, -0.0347], ub_range=[0.0382, 0.2335]
Output bounds: shape=torch.Size([3]), lb_range=[-0.3273, -0.1113], ub_range=[0.0967, 0.1665]
Parameters: W.shape=torch.Size([3, 8]), b.shape=torch.Size([3])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([3]), lb_range=[-0.3273, -0.1113], ub_range=[0.0967, 0.1665]
Output bounds: shape=torch.Size([3]), lb_range=[-0.3273, -0.1113], ub_range=[0.0967, 0.1665]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([6]), lb_range=[-0.6608, -0.1072], ub_range=[0.0103, 0.2980]
Parameters: W.shape=torch.Size([6, 6]), b.shape=torch.Size([6])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (TANH)
================================================================================
Input bounds: shape=torch.Size([6]), lb_range=[-0.6608, -0.1072], ub_range=[0.0103, 0.2980]
Output bounds: shape=torch.Size([6]), lb_range=[-0.5789, -0.1068], ub_range=[0.0103, 0.2895]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([6]), lb_range=[-0.5789, -0.1068], ub_range=[0.0103, 0.2895]
Output bounds: shape=torch.Size([3]), lb_range=[-0.1346, -0.0630], ub_range=[0.1049, 0.1725]
Parameters: W.shape=torch.Size([3, 6]), b.shape=torch.Size([3])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([3]), lb_range=[-0.1346, -0.0630], ub_range=[0.1049, 0.1725]
Output bounds: shape=torch.Size([3]), lb_range=[-0.1346, -0.0630], ub_range=[0.1049, 0.1725]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID


================================================================================
Layer 0 (INPUT)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 1 (INPUT_SPEC)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Constraints generated: 0

================================================================================
Layer 2 (DENSE)
================================================================================
Input bounds: shape=torch.Size([1, 6]), lb_range=[0.0000, 0.0000], ub_range=[1.0000, 1.0000]
Output bounds: shape=torch.Size([6]), lb_range=[-0.6608, -0.1072], ub_range=[0.0103, 0.2980]
Parameters: W.shape=torch.Size([6, 6]), b.shape=torch.Size([6])
Constraints generated: 2
  Con 0: EQ, var_ids=(3, 2)
  Con 1: INEQ, var_ids=(3,)

================================================================================
Layer 3 (TANH)
================================================================================
Input bounds: shape=torch.Size([6]), lb_range=[-0.6608, -0.1072], ub_range=[0.0103, 0.2980]
Output bounds: shape=torch.Size([6]), lb_range=[-0.5789, -0.1068], ub_range=[0.0103, 0.2895]
Constraints generated: 2
  Con 0: INEQ, var_ids=(4, 3)
  Con 1: INEQ, var_ids=(4,)

================================================================================
Layer 4 (DENSE)
================================================================================
Input bounds: shape=torch.Size([6]), lb_range=[-0.5789, -0.1068], ub_range=[0.0103, 0.2895]
Output bounds: shape=torch.Size([3]), lb_range=[-0.1346, -0.0630], ub_range=[0.1049, 0.1725]
Parameters: W.shape=torch.Size([3, 6]), b.shape=torch.Size([3])
Constraints generated: 2
  Con 0: EQ, var_ids=(5, 4)
  Con 1: INEQ, var_ids=(5,)

================================================================================
Layer 5 (ASSERT)
================================================================================
Input bounds: shape=torch.Size([3]), lb_range=[-0.1346, -0.0630], ub_range=[0.1049, 0.1725]
Output bounds: shape=torch.Size([3]), lb_range=[-0.1346, -0.0630], ub_range=[0.1049, 0.1725]
Constraints generated: 0

================================================================================
CONSTRAINT VALIDATION (Targeted)
================================================================================
Total constraints: 6
Unique variables referenced: 4
Variables with bounds found: 4
Status: ✅ VALID

