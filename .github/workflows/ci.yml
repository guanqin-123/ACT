name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # Ensure top-level 'act' package is importable in all jobs
  PYTHONPATH: ${{ github.workspace }}
  # Optional: make TF deterministic-ish and reduce noisy logs
  TF_ENABLE_ONEDNN_OPTS: "0"
  # Enable CI mode for lightweight installs
  ACT_CI_MODE: "true"

jobs:
  # Add a quick test job first to catch import issues early
  quick-test:
    name: Quick Import Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install minimal dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision onnx onnx2pytorch tensorflow

      - name: Test import ACTLog
        run: |
          python -c "from act.util.stats import ACTLog; print('âœ… ACTLog import successful')"

  # Add regression tests as a separate job
  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    needs: quick-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision onnx onnx2pytorch tensorflow pandas numpy pyyaml tqdm pytest

      - name: Run Model Synthesis Tests
        run: |
          cd ${{ github.workspace }}
          timeout 60 python act/front_end/model_synthesis.py

      - name: Run ACT2Torch Pipeline Tests
        run: |
          cd ${{ github.workspace }}
          python act/pipeline/model_factory.py

      - name: Run Torch2ACT Pipeline Tests
        run: |
          cd ${{ github.workspace }}
          python act/pipeline/torch2act.py

      - name: Run Serialization Tests
        run: |
          cd ${{ github.workspace }}
          python -m pytest act/back_end/serialization/test_serialization.py -v